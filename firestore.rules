
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /sessions/{sessionId} {
      allow read: if request.auth != null;

      allow create: if request.auth != null &&
                       request.resource.data.adminUid == request.auth.uid &&
                       request.resource.data.likeClicks == 0 &&
                       request.resource.data.dislikeClicks == 0 &&
                       request.resource.data.isRoundActive == true &&
                       request.resource.data.sessionEnded == false &&
                       request.resource.data.soundsEnabled == true &&
                       request.resource.data.resultsVisible == true &&
                       request.resource.data.sessionType == 'quick' &&
                       request.resource.data.participants is map &&
                       request.resource.data.participants.size() == 0 &&
                       request.resource.data.presenterQueue is list &&
                       request.resource.data.presenterQueue.size() == 0 &&
                       request.resource.data.currentPresenterIndex == -1 &&
                       request.resource.data.currentPresenterName == "" &&
                       // Removed keyTakeawaysEnabled, qnaEnabled, keyTakeaways, questions
                       request.resource.data.createdAt == request.time;

      allow update: if request.auth != null && resource.data.sessionEnded == false && (
                      // Admin actions
                      (resource.data.adminUid == request.auth.uid &&
                        // Ensure admin doesn't change immutable fields or participant map directly via these specific actions
                        request.resource.data.adminUid == resource.data.adminUid &&
                        request.resource.data.createdAt == resource.data.createdAt &&
                        request.resource.data.sessionType == resource.data.sessionType &&
                        request.resource.data.participants == resource.data.participants &&
                        // Removed keyTakeaways and questions checks from here
                        (
                          // Toggle round (optionally resets scores)
                          (
                            request.resource.data.isRoundActive != resource.data.isRoundActive &&
                            (request.resource.data.likeClicks == 0 || request.resource.data.likeClicks == resource.data.likeClicks) &&
                            (request.resource.data.dislikeClicks == 0 || request.resource.data.dislikeClicks == resource.data.dislikeClicks) &&
                            request.resource.data.sessionEnded == resource.data.sessionEnded &&
                            request.resource.data.soundsEnabled == resource.data.soundsEnabled &&
                            request.resource.data.resultsVisible == resource.data.resultsVisible &&
                            request.resource.data.presenterQueue == resource.data.presenterQueue &&
                            request.resource.data.currentPresenterIndex == resource.data.currentPresenterIndex &&
                            request.resource.data.currentPresenterName == resource.data.currentPresenterName
                            // Removed keyTakeawaysEnabled & qnaEnabled checks
                          ) ||
                          // Clear scores
                          (
                            request.resource.data.likeClicks == 0 && request.resource.data.dislikeClicks == 0 &&
                            request.resource.data.isRoundActive == resource.data.isRoundActive &&
                            request.resource.data.sessionEnded == resource.data.sessionEnded &&
                            request.resource.data.soundsEnabled == resource.data.soundsEnabled &&
                            request.resource.data.resultsVisible == resource.data.resultsVisible &&
                            request.resource.data.presenterQueue == resource.data.presenterQueue &&
                            request.resource.data.currentPresenterIndex == resource.data.currentPresenterIndex &&
                            request.resource.data.currentPresenterName == resource.data.currentPresenterName
                            // Removed keyTakeawaysEnabled & qnaEnabled checks
                          ) ||
                          // End session
                          (
                            request.resource.data.sessionEnded == true && resource.data.sessionEnded == false &&
                            request.resource.data.isRoundActive == false && // Client ensures isRoundActive becomes false
                            // Verify that ONLY sessionEnded and isRoundActive fields are being modified
                            request.resource.data.diff(resource.data).affectedKeys().hasOnly(['sessionEnded', 'isRoundActive'])
                          ) ||
                          // Toggle soundsEnabled
                          (
                            request.resource.data.soundsEnabled != resource.data.soundsEnabled &&
                            request.resource.data.isRoundActive == resource.data.isRoundActive &&
                            request.resource.data.likeClicks == resource.data.likeClicks &&
                            request.resource.data.dislikeClicks == resource.data.dislikeClicks &&
                            request.resource.data.sessionEnded == resource.data.sessionEnded &&
                            request.resource.data.resultsVisible == resource.data.resultsVisible &&
                            request.resource.data.presenterQueue == resource.data.presenterQueue &&
                            request.resource.data.currentPresenterIndex == resource.data.currentPresenterIndex &&
                            request.resource.data.currentPresenterName == resource.data.currentPresenterName
                            // Removed keyTakeawaysEnabled & qnaEnabled checks
                          ) ||
                          // Toggle resultsVisible
                          (
                            request.resource.data.resultsVisible != resource.data.resultsVisible &&
                            request.resource.data.isRoundActive == resource.data.isRoundActive &&
                            request.resource.data.likeClicks == resource.data.likeClicks &&
                            request.resource.data.dislikeClicks == resource.data.dislikeClicks &&
                            request.resource.data.sessionEnded == resource.data.sessionEnded &&
                            request.resource.data.soundsEnabled == resource.data.soundsEnabled &&
                            request.resource.data.presenterQueue == resource.data.presenterQueue &&
                            request.resource.data.currentPresenterIndex == resource.data.currentPresenterIndex &&
                            request.resource.data.currentPresenterName == resource.data.currentPresenterName
                            // Removed keyTakeawaysEnabled & qnaEnabled checks
                          ) ||
                          // REMOVED Toggle keyTakeawaysEnabled block
                          // REMOVED Toggle qnaEnabled block
                          // Set/Update Presenter Queue (resets scores and current presenter)
                          (
                            request.resource.data.presenterQueue is list &&
                            request.resource.data.currentPresenterIndex is number && (request.resource.data.currentPresenterIndex == 0 || request.resource.data.currentPresenterIndex == -1) &&
                            request.resource.data.currentPresenterName is string &&
                            request.resource.data.likeClicks == 0 && // Scores reset
                            request.resource.data.dislikeClicks == 0 && // Scores reset
                            (request.resource.data.isRoundActive == (request.resource.data.presenterQueue.size() > 0)) && // Round active if queue has items, false if empty
                            request.resource.data.sessionEnded == resource.data.sessionEnded &&
                            request.resource.data.soundsEnabled == resource.data.soundsEnabled &&
                            request.resource.data.resultsVisible == resource.data.resultsVisible
                            // Removed keyTakeawaysEnabled & qnaEnabled checks
                          ) ||
                          // Advance to Next Presenter (resets scores, updates presenter index/name, activates round)
                          (
                            request.resource.data.presenterQueue == resource.data.presenterQueue && // Queue itself not changed by this specific action
                            request.resource.data.currentPresenterIndex == resource.data.currentPresenterIndex + 1 &&
                            request.resource.data.currentPresenterName is string && // New presenter name will be sent
                            request.resource.data.likeClicks == 0 && // Scores reset
                            request.resource.data.dislikeClicks == 0 && // Scores reset
                            request.resource.data.isRoundActive == true && // Round becomes active (unless it was the end of queue)
                            request.resource.data.sessionEnded == resource.data.sessionEnded &&
                            request.resource.data.soundsEnabled == resource.data.soundsEnabled &&
                            request.resource.data.resultsVisible == resource.data.resultsVisible
                            // Removed keyTakeawaysEnabled & qnaEnabled checks
                          ) ||
                          // Admin ending queue by advancing past the last presenter
                          (
                            request.resource.data.presenterQueue == resource.data.presenterQueue &&
                            request.resource.data.currentPresenterName == "End of Queue" && // Specific marker for end
                            request.resource.data.isRoundActive == false && // Round becomes inactive
                            request.resource.data.likeClicks == 0 && // Scores reset
                            request.resource.data.dislikeClicks == 0 && // Scores reset
                            // Ensure only relevant fields for this action are changing
                            request.resource.data.currentPresenterIndex == resource.data.currentPresenterIndex && // index might not change or might be set to queue length
                            request.resource.data.sessionEnded == resource.data.sessionEnded &&
                            request.resource.data.soundsEnabled == resource.data.soundsEnabled &&
                            request.resource.data.resultsVisible == resource.data.resultsVisible
                            // Removed keyTakeawaysEnabled & qnaEnabled checks
                          )
                        )
                      ) ||
                      // User voting actions
                      (
                        resource.data.isRoundActive == true &&
                        ( // Condition for allowing vote: EITHER not in presenter mode OR in presenter mode with an active presenter
                          (resource.data.presenterQueue == null || resource.data.presenterQueue.size() == 0) ||
                          (
                            resource.data.presenterQueue.size() > 0 &&
                            resource.data.currentPresenterIndex >= 0 &&
                            resource.data.currentPresenterIndex < resource.data.presenterQueue.size() &&
                            resource.data.currentPresenterName != "" &&
                            resource.data.currentPresenterName != "End of Queue"
                          )
                        ) &&
                        (
                          (request.resource.data.likeClicks == resource.data.likeClicks + 1 && request.resource.data.dislikeClicks == resource.data.dislikeClicks) ||
                          (request.resource.data.dislikeClicks == resource.data.dislikeClicks + 1 && request.resource.data.likeClicks == resource.data.likeClicks)
                        ) &&
                        // Ensure other critical fields are not changed by vote updates
                        request.resource.data.adminUid == resource.data.adminUid &&
                        request.resource.data.isRoundActive == resource.data.isRoundActive &&
                        request.resource.data.sessionEnded == resource.data.sessionEnded &&
                        request.resource.data.createdAt == resource.data.createdAt &&
                        request.resource.data.soundsEnabled == resource.data.soundsEnabled &&
                        request.resource.data.resultsVisible == resource.data.resultsVisible &&
                        request.resource.data.sessionType == resource.data.sessionType &&
                        request.resource.data.participants == resource.data.participants &&
                        request.resource.data.presenterQueue == resource.data.presenterQueue &&
                        request.resource.data.currentPresenterIndex == resource.data.currentPresenterIndex &&
                        request.resource.data.currentPresenterName == resource.data.currentPresenterName
                        // Removed keyTakeawaysEnabled, qnaEnabled, keyTakeaways, questions
                      ) ||
                      // User setting/updating their own nickname in participants map
                      (
                        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['participants']) &&
                        request.resource.data.participants is map &&
                        request.auth.uid in request.resource.data.participants &&
                        request.resource.data.participants[request.auth.uid].nickname is string &&
                        (
                          ( !(resource.data.participants is map) || (resource.data.participants is map && !(request.auth.uid in resource.data.participants)) ) &&
                          request.resource.data.participants[request.auth.uid].joinedAt == request.time
                        ) ||
                        (
                          (resource.data.participants is map && request.auth.uid in resource.data.participants) &&
                          request.resource.data.participants[request.auth.uid].joinedAt == resource.data.participants[request.auth.uid].joinedAt
                        ) &&
                        (
                          !(resource.data.participants is map) &&
                          request.resource.data.participants.keys().hasOnly([request.auth.uid])
                        ) ||
                        (
                          resource.data.participants is map &&
                          request.resource.data.participants.diff(resource.data.participants).affectedKeys().hasOnly([request.auth.uid])
                        )
                      )
                      // REMOVED User submitting a Key Takeaway block
                      // REMOVED User submitting a Question block
                    );
    }
  }
}

    